DROP TABLE IF EXISTS
    _User;
DROP TABLE IF EXISTS
    Player;
DROP TABLE IF EXISTS
    Developer;
DROP TABLE IF EXISTS
    ProgLanguage;
DROP TABLE IF EXISTS
    Avatar;
DROP TABLE IF EXISTS
    VRExperience;
DROP TABLE IF EXISTS
    supportedHeadset;
DROP TABLE IF EXISTS
    DevelopmentTeam;
DROP TABLE IF EXISTS
    Work;    
CREATE TABLE _User(
    FName VARCHAR(20) NOT NULL,
    LName VARCHAR(20) NOT NULL,
    dateOfBirth DATE NOT NULL,
    email VARCHAR(50),
    streedAddr VARCHAR(20),
    City VARCHAR(20),
    State VARCHAR(20),
    County VARCHAR(20),
    Zip VARCHAR(20),
    PRIMARY KEY(FName, LName, dateOfBirth)
); CREATE TABLE Player(
    FName VARCHAR(20) REFERENCES _User(FName) ON DELETE CASCADE ON UPDATE CASCADE,
    LName VARCHAR(20) REFERENCES _User(LName) ON DELETE CASCADE ON UPDATE CASCADE,
    dateOfBirth DATE REFERENCES _User(dateOfBirth) ON DELETE CASCADE ON UPDATE CASCADE,
    Headset VARCHAR(20),
    favGenre VARCHAR(20),
    PRIMARY KEY(FName, LName, dateOfBirth)
); CREATE TABLE Developer(
    FName VARCHAR(20) REFERENCES _User(FName)ON DELETE CASCADE ON UPDATE CASCADE,
    LName VARCHAR(20) REFERENCES _User(LName) ON DELETE CASCADE ON UPDATE CASCADE,
    dateOfBirth DATE REFERENCES _User(dateOfBirth) ON DELETE CASCADE ON UPDATE CASCADE,
    startDate datetime DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(FName, LName, dateOfBirth)
); CREATE TABLE ProgLanguage(
    dFName VARCHAR(20) REFERENCES Developer(FName) ON DELETE CASCADE ON UPDATE CASCADE,
    dLName VARCHAR(20) REFERENCES Developer(LName) ON DELETE CASCADE ON UPDATE CASCADE,
    dDateOfBirth DATE REFERENCES Developer(dDateOfBirth) ON DELETE CASCADE ON UPDATE CASCADE,
    LANGUAGE VARCHAR(20),
    PRIMARY KEY(
        dFName,
        dLName,
        dDateOfBirth,
        LANGUAGE
    )
); CREATE TABLE Avatar(
    uFName VARCHAR(20) REFERENCES _User(FName) ON DELETE CASCADE ON UPDATE CASCADE,
    uLName VARCHAR(20) REFERENCES _User(LName) ON DELETE CASCADE ON UPDATE CASCADE,
    uDateOfBirth DATE REFERENCES _User(dateOfBirth) ON DELETE CASCADE ON UPDATE CASCADE,
    NAME VARCHAR(20) NOT NULL,
    height VARCHAR(20),
    gender VARCHAR(20),
    species VARCHAR(20),
    PRIMARY KEY(
        uFNAME,
        uLName,
        uDateOfBirth,
        NAME
    )
); CREATE TABLE VRExperience(
    expID INT NOT NULL AUTO_INCREMENT,
    dFName VARCHAR(20) REFERENCES Developer(FName) ON DELETE CASCADE ON UPDATE CASCADE,
    dLName VARCHAR(20) REFERENCES Developer(LName) ON DELETE CASCADE ON UPDATE CASCADE,
    dDateOfBirth DATE REFERENCES Developer(dateOfBirth) ON DELETE CASCADE ON UPDATE CASCADE,
    NAME VARCHAR(20) REFERENCES Avatar(NAME),
    TYPE VARCHAR(20),
    PRIMARY KEY(expID)
); CREATE TABLE supportedHeadset(
    expID CHAR(5) REFERENCES VRExperience(expID) ON DELETE CASCADE ON UPDATE CASCADE,
    NAME VARCHAR(20) REFERENCES Avatar(NAME) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(expID, NAME)
); CREATE TABLE DevelopmentTeam(
    teamID INT NOT NULL AUTO_INCREMENT,
    TYPE VARCHAR(20),
    description VARCHAR(50),
    PRIMARY KEY(teamID)
); CREATE TABLE Work(
    dFName VARCHAR(20) REFERENCES Developer(FName) ON DELETE CASCADE ON UPDATE CASCADE,
    dLName VARCHAR(20) REFERENCES Developer(LName) ON DELETE CASCADE ON UPDATE CASCADE,
    dDateOfBirth DATE REFERENCES Developer(dateOfBirth) ON DELETE CASCADE ON UPDATE CASCADE,
    expID  INT REFERENCES VRExperience(expID) ON DELETE CASCADE ON UPDATE CASCADE,
    teamID INT REFERENCES DevelopmentTeam(teamID) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(
        dFName,
        dLName,
        dDateOfBirth,
        expID,
        teamID
    )
);